// DO NOT EDIT. Generated by 'gorums' plugin for protoc-gen-go
// Source file to edit is: calltype_multicast_tmpl

package dev

import "golang.org/x/net/context"

// WriteAsync is a one-way multicast operation, where args is sent to
// every node in configuration c. The call is asynchronous and has no response
// return value.
func (c *Configuration) WriteAsync(ctx context.Context, args *State) error {
	return c.mgr.writeAsync(ctx, c, args)
}

func (m *Manager) writeAsync(ctx context.Context, c *Configuration, args *State) error {
	for _, node := range c.nodes {
		go func(n *Node) {
			err := n.WriteAsyncClient.Send(args)
			if err == nil {
				return
			}
			if m.logger != nil {
				m.logger.Printf("%d: writeAsync stream send error: %v", n.id, err)
			}
		}(node)
	}

	return nil
}
